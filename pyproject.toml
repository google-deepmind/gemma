[project]
# Project metadata. Available keys are documented at:
# https://packaging.python.org/en/latest/specifications/declaring-project-metadata
name = "gemma"
description = "Open weights large language model (LLM) from Google DeepMind."
readme = "README.md"
requires-python = ">=3.11"
license = {file = "LICENSE"}
authors = [
    {name = "Alek Andreev", email="alekandreev@google.com"},
    {name = "Armand Joulin", email="ajoulin@google.com"},
    {name = "Cassidy Hardin", email="cassidyhardin@google.com"},
    {name = "Juliette Love", email="juliettelove@google.com"},
    {name = "Kathleen Kenealy", email="kkenealy@google.com"},
    {name = "Laurent Sifre", email="sifre@google.com"},
    {name = "LÃ©onard Hussenot", email="hussenot@google.com"},
    {name = "Michelle Casbon", email="michellecasbon@google.com"},
    {name = "Mihir Sanjay Kale", email="mihirkale@google.com"},
    {name = "Morgane Riviere", email="mriviere@google.com"},
    {name = "Ravin Kumar", email="ravink@google.com"},
    {name = "Robert Dadashi", email="dadashi@google.com"},
    {name = "Shreya Pathak", email="shreyapa@google.com"},
    {name = "Surya Bhupatiraju", email="sbhupatiraju@google.com"},
    {name = "Thomas Mesnard", email="mesnard@google.com"},
]
classifiers = [  # List of https://pypi.org/classifiers/
    "License :: OSI Approved :: Apache Software License",
    "Intended Audience :: Science/Research",
]
keywords = []

# pip dependencies of the project
# Installed locally with `pip install -e .`
dependencies = [
    "absl-py",
    "etils[enp,epath,epy]",
    "grain",
    "jax",
    "jaxtyping",
    "kauldron",
    "flax",
    "numpy",
    "orbax-checkpoint",
    "sentencepiece",
]

# `version` is automatically set by flit to use `gemma.__version__`
dynamic = ["version"]

[project.urls]
homepage = "https://github.com/google-deepmind/gemma"
repository = "https://github.com/google-deepmind/gemma"
changelog = "https://github.com/google-deepmind/gemma/blob/main/CHANGELOG.md"
# documentation = ""

[project.optional-dependencies]
# Development deps (unittest, linting, formating,...)
# Installed through `pip install -e .[dev]`
dev = [
    "pytest",
    "pytest-xdist",
    "pylint>=2.6.0",
    "pyink",
]

[tool.pyink]
# Formatting configuration to follow Google style-guide
line-length = 80
unstable = true
pyink-indentation = 2
pyink-use-majority-quotes = true

[build-system]
# Build system specify which backend is used to build/install the project (flit,
# poetry, setuptools,...). All backends are supported by `pip install`
requires = ["flit_core >=3.8,<4"]
build-backend = "flit_core.buildapi"

[tool.flit.sdist]
# Flit specific options (files to exclude from the PyPI package).
# If using another build backend (setuptools, poetry), you can remove this
# section.
exclude = [
  # Do not release tests files on PyPI
  "**/*_test.py",
  "testdata/**",
]
